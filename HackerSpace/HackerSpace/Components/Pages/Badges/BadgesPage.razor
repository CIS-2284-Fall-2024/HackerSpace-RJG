@page "/badges"
@attribute [StreamRendering(true)]
@rendermode InteractiveServer

@inject NavigationManager nav
@inject BadgesPageDAL dal

<h3>Badges Page</h3>

@if(badges == null)
{
    <p>Loading...</p>
}
else
{
    @foreach(var badge in badges)
    {
        <p>
            @badge.Title
            <button type="button" class="btn btn-primary" @onclick="()=>OnEditBadge(badge)">Edit</button>
            <button type="button" class="btn btn-danger" @onclick="()=>OnDeleteBadgeAsync(badge)">Delete</button>
        </p>
    }

    <button type="button" class="btn btn-primary" @onclick="OnAddBadge">Add Badge</button>
}
@code {
    private List<Badge>? badges;

    protected async override Task OnInitializedAsync()
    {
        //Get badges
        badges = await dal.GetAllAsync();
    }

    private void OnAddBadge()
    {
        nav.NavigateTo("badge");
    }

    private void OnEditBadge(Badge badge)
    {
        nav.NavigateTo($"badge/{badge.Id}");
    }

    private async Task OnDeleteBadgeAsync(Badge badge)
    {
        badges?.Remove(badge);
        await dal.DeleteAsync(badge);
    }
}
